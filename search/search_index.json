{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SFMC Developer Certification For official documentation visit Trailhead . Complete the Develop for Marketing Cloud Trail to get started. This certification basically expects you to: Configure and set-up data models (data extensions, shared data extensions, Contact model). Configure data import. Work with customers and platform data (SQL, views, Send Log). Write basic SQL, including join statements. Create dynamic, personalized marketing assets using various scripting languages. Build Marketing Cloud web experience (data forms, custom preference pages). Explain subscription management. Work through and resolve scenarios using REST and SOAP API. This certification does not cover MobilePush SDK, Journey Builder SDK, and custom components Terms API - Application Programming Interface REST - Representational State Transfer SOAP - Simple Object Access Protocol JSON - JavaScript Object Notation SDK - Software Development Kit Resources Programmatic Marketing Content The AMPscript Guide Marketing Cloud: Developer Center SFMC Cookbook Study Notes AmpScript.com Study Guide sfmarketing.cloud Preparation SFMC Developer Certification Bootcamp - Youtube Playlist Study Sheet - Google Doc Mind Maps Programmatic Languages API Data Management Data Modeling Security Quizlets Set 1 Set 2 Set 3","title":"Home"},{"location":"#sfmc-developer-certification","text":"For official documentation visit Trailhead . Complete the Develop for Marketing Cloud Trail to get started. This certification basically expects you to: Configure and set-up data models (data extensions, shared data extensions, Contact model). Configure data import. Work with customers and platform data (SQL, views, Send Log). Write basic SQL, including join statements. Create dynamic, personalized marketing assets using various scripting languages. Build Marketing Cloud web experience (data forms, custom preference pages). Explain subscription management. Work through and resolve scenarios using REST and SOAP API. This certification does not cover MobilePush SDK, Journey Builder SDK, and custom components","title":"SFMC Developer Certification"},{"location":"#terms","text":"API - Application Programming Interface REST - Representational State Transfer SOAP - Simple Object Access Protocol JSON - JavaScript Object Notation SDK - Software Development Kit","title":"Terms"},{"location":"#resources","text":"Programmatic Marketing Content The AMPscript Guide Marketing Cloud: Developer Center SFMC Cookbook Study Notes AmpScript.com Study Guide sfmarketing.cloud Preparation SFMC Developer Certification Bootcamp - Youtube Playlist Study Sheet - Google Doc","title":"Resources"},{"location":"#mind-maps","text":"Programmatic Languages API Data Management Data Modeling Security","title":"Mind Maps"},{"location":"#quizlets","text":"Set 1 Set 2 Set 3","title":"Quizlets"},{"location":"about/","text":"About Me Contributing Sources","title":"About"},{"location":"about/#about-me","text":"","title":"About Me"},{"location":"about/#contributing-sources","text":"","title":"Contributing Sources"},{"location":"api/","text":"API You will be challenged to: Describe API objects , methods , and routes . Describe the OAuth authentication flow and how an access token is used in SOAP and REST headers. Evaluate the significance of response handling . Installed Package Permissions API Permission Scopes How to create Tenant Specific Endpoints The goal of the TSE architecture is to provide our customers improved security, service reliability, availability, and performance. Create a package for each system + IP combo that integrates with SFMC. Concepts Objects - Objects are elements that you use within policy rules. Methods - for HTTP... GET, POST, PUT, DELETE, PATCH Tenants & Endpoints - Marketing Cloud automatically assigns a unique, system-generated subdomain (for the end point) to each of its tenants. Routes - A route is the \"name\" you use to access endpoints, used in the URL. A route can have multiple endpoints associated with it. E.g. /address/v1/validateEmail When to Use REST API Contacts Content Builder Journey Builder Mobile Connect MobilePush Campaigns Triggered Sends (may also use SOAP) Web Services SOAP API Tracking Subscribers and lists Automations Triggered Sends (may also use REST) Content Most other email activities API Caveats Number of Call Limits Pro 2 million Corporate 6 million Enterprise 200 million Rate Limits 2,000 SOAP calls per minute 2,500 REST calls per minute Optimize REST API A REST request is made of four components: The endpoint Is made of the root endpoint + path Make use of your tenant endpoint The method GET POST PUT DELETE The headers Can be used for things as authentication or providing information about the body content The data (or body) Contains the information you want to be sent to the server Response Handling Authentication Request Token oAuth2 Refresh Access Token - Lifetime of access token is 20 minutes, refresh 5 min before expiry Token Management Storing credentials in an integration: Set credentials as environment variables in the application platform Store credentials in a key management system (KMS) Processing Types Synchronous - the connection remains open from the moment the request is submitted to the server by the client. The client waits until the server sends back a response. With synchronous call processing, API calls go directly to Marketing Cloud to be processed at the time they are received. If Marketing Cloud is unavailable, either for scheduled or unscheduled maintenance, synchronous API calls cannot be received and are not processed. Asynchronous - Asynchronous clients don\u2019t need to wait for a response to continue working. Therefore, microservices in an app can continue to process and send data, even when one of their partner services runs into trouble. This capability provides more reliable service to the user and can be especially valuable in cases where service availability is low or overloaded with demand. ResultItem - contains the results of an asynchronous API call specified with RequestID REST Routes Uses JSON request and response bodies and resource endpoings to support multi-channel use. !!! Most case are synchronous !!! Payload max 4MB !!! Timeout 120 seconds non-tracking !!! Timeout 300 seconds with tracking Popular Routes (Uses) !!! Content Builder - /asset/v1/content List of Asset Types Get an Asset by ID !!! Event Notification Service - /platform/v1 !!! Journey Builder - /interactions/v1 Add Contact in a Journey Fire Event !!! Transactional Messaging - /messaging/v1/email & /messaging/v1/sms Contact Builder Create Contacts Add Data to Data Extension Validate Email Address s API Reference Parse JSON SOAP API Methods CREATE - Multiple object types can be created with one call. RETRIEVE UPDATE - Multiple object types can be updated with one call. DELETE - Multiple object types can be deleted with one call. EXECUTE PERFORM PLATFORM CONFIGURE EXTRACT DESCRIBE GET SYSTEM STATUS QUERY Payload Header Request Type/Method Options (optional) Object/Array Attributes/Properties Filters (optional) Objects !!! Account - Represents a Marketing Cloud account How to retrieve an account object !!! AccountUser - Represents a Marketin Cloud user !!! DataExtension - Represents a Data Extension !!! DataExtensionObject - Represents a row within a Data Extension - Data Extension Object to add data !!! Subscriber - Represents a subscriber record !!! List - Represents a list SentEvent LogUnsubEvent SubscriberKey and JobID are needed Async Requests Ideal for TriggeredSends DataExtensionObjects Should be used when you need to prioritise High Availability Queued calls Sequential Processing Delays in the Schedule Error Handling General Error Codes Triggered Send Available via the TriggeredSend object using the Create method. * Subscriber * [TriggerSendDefinition](https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/triggeredsenddefinition.html Error Handling Rate Limiting Errors Marketing Cloud reserves the right to throttle REST and SOAP API requests from a specific customer (account level) when those API requests cause slowed system performance. (Lifting the \"ban\" requires a support request.) The throttling rate depends on the rate necessary to stabilize operations. If this throttling occurs, the business unit or user causing this issue receives HTTP 429 (REST) or HTTP 500 (SOAP) error messages communicating the limited rate until the requests causing the issue cease. REST Error Codes Validation Data Type Message format Media Type Authorization Privileges Business Rules Authentication Authentication Internal Server Error Runtime Object Requests Error Codes HTTP Hands on Activity Potentially covers 50-60% of the exam material in this section. Create API package REST - get authentication token (API) REST - Create HTML email SOAP - Retrieve DE Templates (required to create Triggered Send DE) SOAP - Create Triggered Send Data Extension SOAP - Create Triggered Send Definition REST - Execute Triggered Send SOAP - Execute Triggered Send SOAP - Insert row to DE (review REST insert but can't use without Primary Key) REST - Retrieve Data SOAP - Retrieve Data Best Practices 1 Concurrent Import to data extension or lists Up to 50 Sender Profiles Up to 1000 import and filter definitions Up to 1000 Business Units per Account Up to 50 profile attributes Up to 1million rows in a data extension Up to 1000 users per account Up to 1000 Data extensions in a Account Resources Salesforce Developers : Intro to Marketing Cloud APIs and REST API Salesforce Developers : OAP Web Service API Salesforce Developers : Your Subdomain and Your Tenant\u2019s Endpoints Salesforce Developers : API Integration Salesforce Developers : Create an OAuth 2.0 API Integration in Enhanced Packages Salesforce Developers : OAuth 2.0 API Considerations Salesforce Developers : Error Handling Salesforce Developers : Error Codes Salesforce Developers : Intro to Marketing Cloud APIs Salesforce Developers : Content Builder API Salesforce Developers : GroupConnect Chat Messaging API Salesforce Developers : Journey Builder API Salesforce Developers : MobileConnect API Salesforce Developers : Personalization Builder API Salesforce Developers : Transactional Messaging API Salesforce Developers : REST API Reference Salesforce Developers : SOAP Web Service API Salesforce Developers : Get Started with the SOAP Web Services API Salesforce Developers : API Integration Security Salesforce Developers : SOAP API Best Practices !!! Salesforce Developers : Optimize API Calls and Data Structures to Improve Performance Salesforce Developers : Introduction to Marketing Cloud Platform SDKs","title":"API (22%)"},{"location":"api/#api","text":"You will be challenged to: Describe API objects , methods , and routes . Describe the OAuth authentication flow and how an access token is used in SOAP and REST headers. Evaluate the significance of response handling .","title":"API"},{"location":"api/#installed-package","text":"Permissions API Permission Scopes How to create Tenant Specific Endpoints The goal of the TSE architecture is to provide our customers improved security, service reliability, availability, and performance. Create a package for each system + IP combo that integrates with SFMC.","title":"Installed Package"},{"location":"api/#concepts","text":"Objects - Objects are elements that you use within policy rules. Methods - for HTTP... GET, POST, PUT, DELETE, PATCH Tenants & Endpoints - Marketing Cloud automatically assigns a unique, system-generated subdomain (for the end point) to each of its tenants. Routes - A route is the \"name\" you use to access endpoints, used in the URL. A route can have multiple endpoints associated with it. E.g. /address/v1/validateEmail","title":"Concepts"},{"location":"api/#when-to-use","text":"","title":"When to Use"},{"location":"api/#rest-api","text":"Contacts Content Builder Journey Builder Mobile Connect MobilePush Campaigns Triggered Sends (may also use SOAP)","title":"REST API"},{"location":"api/#web-services-soap-api","text":"Tracking Subscribers and lists Automations Triggered Sends (may also use REST) Content Most other email activities","title":"Web Services SOAP API"},{"location":"api/#api-caveats","text":"Number of Call Limits Pro 2 million Corporate 6 million Enterprise 200 million Rate Limits 2,000 SOAP calls per minute 2,500 REST calls per minute","title":"API Caveats"},{"location":"api/#optimize","text":"","title":"Optimize"},{"location":"api/#rest-api_1","text":"A REST request is made of four components: The endpoint Is made of the root endpoint + path Make use of your tenant endpoint The method GET POST PUT DELETE The headers Can be used for things as authentication or providing information about the body content The data (or body) Contains the information you want to be sent to the server","title":"REST API"},{"location":"api/#response-handling","text":"","title":"Response Handling"},{"location":"api/#authentication","text":"Request Token oAuth2 Refresh Access Token - Lifetime of access token is 20 minutes, refresh 5 min before expiry Token Management Storing credentials in an integration: Set credentials as environment variables in the application platform Store credentials in a key management system (KMS)","title":"Authentication"},{"location":"api/#processing-types","text":"Synchronous - the connection remains open from the moment the request is submitted to the server by the client. The client waits until the server sends back a response. With synchronous call processing, API calls go directly to Marketing Cloud to be processed at the time they are received. If Marketing Cloud is unavailable, either for scheduled or unscheduled maintenance, synchronous API calls cannot be received and are not processed. Asynchronous - Asynchronous clients don\u2019t need to wait for a response to continue working. Therefore, microservices in an app can continue to process and send data, even when one of their partner services runs into trouble. This capability provides more reliable service to the user and can be especially valuable in cases where service availability is low or overloaded with demand. ResultItem - contains the results of an asynchronous API call specified with RequestID","title":"Processing Types"},{"location":"api/#rest-routes","text":"Uses JSON request and response bodies and resource endpoings to support multi-channel use. !!! Most case are synchronous !!! Payload max 4MB !!! Timeout 120 seconds non-tracking !!! Timeout 300 seconds with tracking","title":"REST Routes"},{"location":"api/#popular-routes-uses","text":"!!! Content Builder - /asset/v1/content List of Asset Types Get an Asset by ID !!! Event Notification Service - /platform/v1 !!! Journey Builder - /interactions/v1 Add Contact in a Journey Fire Event !!! Transactional Messaging - /messaging/v1/email & /messaging/v1/sms Contact Builder Create Contacts Add Data to Data Extension Validate Email Address s","title":"Popular Routes (Uses)"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"api/#parse-json","text":"","title":"Parse JSON"},{"location":"api/#soap-api","text":"","title":"SOAP API"},{"location":"api/#methods","text":"CREATE - Multiple object types can be created with one call. RETRIEVE UPDATE - Multiple object types can be updated with one call. DELETE - Multiple object types can be deleted with one call. EXECUTE PERFORM PLATFORM CONFIGURE EXTRACT DESCRIBE GET SYSTEM STATUS QUERY","title":"Methods"},{"location":"api/#payload","text":"Header Request Type/Method Options (optional) Object/Array Attributes/Properties Filters (optional)","title":"Payload"},{"location":"api/#objects","text":"!!! Account - Represents a Marketing Cloud account How to retrieve an account object !!! AccountUser - Represents a Marketin Cloud user !!! DataExtension - Represents a Data Extension !!! DataExtensionObject - Represents a row within a Data Extension - Data Extension Object to add data !!! Subscriber - Represents a subscriber record !!! List - Represents a list SentEvent LogUnsubEvent SubscriberKey and JobID are needed","title":"Objects"},{"location":"api/#async-requests","text":"Ideal for TriggeredSends DataExtensionObjects Should be used when you need to prioritise High Availability Queued calls Sequential Processing Delays in the Schedule","title":"Async Requests"},{"location":"api/#error-handling","text":"General Error Codes","title":"Error Handling"},{"location":"api/#triggered-send","text":"Available via the TriggeredSend object using the Create method. * Subscriber * [TriggerSendDefinition](https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/triggeredsenddefinition.html","title":"Triggered Send"},{"location":"api/#error-handling_1","text":"","title":"Error Handling"},{"location":"api/#rate-limiting-errors","text":"Marketing Cloud reserves the right to throttle REST and SOAP API requests from a specific customer (account level) when those API requests cause slowed system performance. (Lifting the \"ban\" requires a support request.) The throttling rate depends on the rate necessary to stabilize operations. If this throttling occurs, the business unit or user causing this issue receives HTTP 429 (REST) or HTTP 500 (SOAP) error messages communicating the limited rate until the requests causing the issue cease.","title":"Rate Limiting Errors"},{"location":"api/#rest-error-codes","text":"Validation Data Type Message format Media Type Authorization Privileges Business Rules Authentication Authentication Internal Server Error Runtime Object Requests","title":"REST Error Codes"},{"location":"api/#error-codes","text":"HTTP","title":"Error Codes"},{"location":"api/#hands-on-activity","text":"Potentially covers 50-60% of the exam material in this section. Create API package REST - get authentication token (API) REST - Create HTML email SOAP - Retrieve DE Templates (required to create Triggered Send DE) SOAP - Create Triggered Send Data Extension SOAP - Create Triggered Send Definition REST - Execute Triggered Send SOAP - Execute Triggered Send SOAP - Insert row to DE (review REST insert but can't use without Primary Key) REST - Retrieve Data SOAP - Retrieve Data","title":"Hands on Activity"},{"location":"api/#best-practices","text":"1 Concurrent Import to data extension or lists Up to 50 Sender Profiles Up to 1000 import and filter definitions Up to 1000 Business Units per Account Up to 50 profile attributes Up to 1million rows in a data extension Up to 1000 users per account Up to 1000 Data extensions in a Account","title":"Best Practices"},{"location":"api/#resources","text":"Salesforce Developers : Intro to Marketing Cloud APIs and REST API Salesforce Developers : OAP Web Service API Salesforce Developers : Your Subdomain and Your Tenant\u2019s Endpoints Salesforce Developers : API Integration Salesforce Developers : Create an OAuth 2.0 API Integration in Enhanced Packages Salesforce Developers : OAuth 2.0 API Considerations Salesforce Developers : Error Handling Salesforce Developers : Error Codes Salesforce Developers : Intro to Marketing Cloud APIs Salesforce Developers : Content Builder API Salesforce Developers : GroupConnect Chat Messaging API Salesforce Developers : Journey Builder API Salesforce Developers : MobileConnect API Salesforce Developers : Personalization Builder API Salesforce Developers : Transactional Messaging API Salesforce Developers : REST API Reference Salesforce Developers : SOAP Web Service API Salesforce Developers : Get Started with the SOAP Web Services API Salesforce Developers : API Integration Security Salesforce Developers : SOAP API Best Practices !!! Salesforce Developers : Optimize API Calls and Data Structures to Improve Performance Salesforce Developers : Introduction to Marketing Cloud Platform SDKs","title":"Resources"},{"location":"data-management/","text":"Data Management You will be challenged to: Configure import activity using various file formats within Marketing Cloud Apply SQL to produce the desired results Explain the different ways to extract data from Marketing Cloud Describe SQL best practices for managing data in Marketing Cloud Apply best practices for send logs Describe how data is affected by the Contact delete process . Data Views Get to know these system views by heart: _listsubscribers _subscribers Parent Business Unit only To determining the Business Unit level subscriber status is by running a Tracking Extract from the Business Unit and include 'All Subscribers' in your extract. The resulting subscribers.txt file will contain that status relative to that business unit. _sent _open _click _bounce _unsubscribe _complaint _job _journeyactivity _journey Data Extract Extract Types Export Create 1 or more zipped files to export data Import Convert XML file into other file to import... comma,tab,pipe Import Activity Types Post File Drop %%FILENAME_FROM_TRIGGER%% Post File Transfer Activity %%FILENAME_FROM_TRIGGER_BASE%% Scheduled Can be used to Add, Add/Update, Update, Overwrite If the file you are importing is encrypted or compressed, you can use a file transfer activity to prepare the file for import. Marketing Cloud Connect users can create an import activity to populate a data extension with object and report data from other clouds via Synchronized Data Sources. You can specify the character encoding your imports use by contacting your Salesforce admin. The encoding you enable applies to all imports in an account. Marketing Cloud assumes that the FTP server in the selected file transfer location reports time in UTC. UTC assumes no time zone offset. If the remote FTP server is not utilizing UTC, adjust limits specified on the Properties page, including System buffer, during activity setup to ensure the activity runs on the intended schedule. File Transfer Activity Encrypt files with SFMC Public Key Use this activity for a file found on the FTP to: Unzip Files - drops file in the same folder Decrypt Files - Requires Private Key PGP / GPG Decryption Move file from FTP to safehouse Safehouse is not an accesible place It is a data store at the platform level Files will remain on the sFTP for at least 21 days Subscription Management Sendlogs Gives you access to data not available via standard tracking functions in the Salesforce Marketing Cloud application. You can also specify how long that information will be available depending on your data retention needs You can run query activities on the send logging data extension to return information on the information contained in that data extension. Best Practices Important to assign a data retention policy, 10 days recommended Keep the number of custom fields low, 10 or fewer When creating a field type Text Do not leave its length blank Avoid assigning a huge length (1000+) Synchronized Data Extensions Criteria on data import Contact Delete Feature Full understanding of delete process Best Practices To improve Contact Delete performance, break your requests into at least 6 smaller requests and submit each request 5 minutes apart. To improve the speed of this process, delete any unnecessary sendable data extensions in your account. You can delete up to one million records. Order of Operation Deletion process initiated > Suppression period > Final deletion Only contacts in these studios can be delieted Email Studio MobileConnect MobilePush Contact Builder Feature needs to be enabled in the parent account level Deletion Process Process is initiated Enterprise 2.0 Accounts - Deletion should be initiated from the parent account level When the process is initiated, suppressed contacts will Disappear from Journey Builder - It prevents entry by any contact with the same ContactKey Disappear from Contact builder - It prevents creation of any new contact record with the same ContactKey Disappear from Audience Builder - Deleted ContatKeys are excluded from audiences Not receive sends or appear in Email Studio - It prevents addition of any contact with the same ContactKey via imports or triggered sends Not received sends or appear in MobileConnect - During this phase, triggered sends and responses to subscriber' messages aren't delivered Not receive sends or appear in MobilePush Not receive sends or appear in GroupConnect - Follow requests are ignored. Block requests are processed. No auto-responses to incoming messages are triggered Not receive sends or appear in Web Recommendations, Email Recommendataions, and Web and Mobile Analytics. Suppression period 14 days - it can be reduced to 0 (zero) Suppress sends, only - no communications will be sent to that contact The recommended period is set to 0 (zero), however it totally depends on your account design Deletion occurrs Removed a contact from your Marketing Cloud instance, not only a BU Contacts are deleted from lists and sendable data extensions - Non-sendable DE needs to be part of population, to be included in the deletion process In the backend, the KEYS are preserved and the personal information anonymized, so it doesn't affect data reporting Tracking information of a contact will be deleted Aggregate data is still preserved Sends, Imports, automation, query activites... have priority over deletion process The deletion will occur, over the night UTC system time, when no other process is running Deletion process has the lowest priority in the stack Limitations 1 million records per data extension / list Only 1 key can be used to identify the contact to delete Subscriber Key or Contact Key Email is not an option REST API Call The deletion call process key by key from the payload, asynchronously - the process can last serveral hours to complete Perform it from the parent account, not from the BU You can delete contacts in 3 different types of request 1st, by Contact ID - POST /contacts/v1/contacts/actions/delete?type=ids 2nd, by Contact Key - POST /contacts/v1/contacts/actions/delete?type=keys 3rd, by List - POST /contacts/v1/contacts/actions/deletetype=listReference Request payload, sample { \"ContactTypeID\":0, \"values\":[\"ContactKey1\",\"ContactKey2\",\"ContactKey3\"], \"DeleteOperationType\":\"ContactAndAttributes\" } SQL Best Practices Split long/complex queries in multiple steps To increase performance To avoid timeout Use brackets to mention the name of field or data extensions that have a space in their name Use alias to assign temporary name for tables, to make query easy to read JOIN Statements Used to retrieve data from 2 or more data extensions INNER JOIN Return the matched values from 2 or more tables In other words, it looks for records that exists in both tables LEFT JOIN RIGHT JOIN OUTER JOIN UNION Combine the results of two or more queries in one result Requirements Fields' data type must be the same Number of fields must be the same across queries Order of fields must be the same across queries UNION Eleminates dupliates Unifies only unique records UNION ALL Unifies all records, even duplicate records Functions Conditional Clauses WHERE BETWEEN [HAVING] CASE Converting Data Cast() Convert() Limiting and Ordering results TOP ORDER BY GROUP BY Date-based Functions DATEDIFF DATEADD DATEPART ISDATE() Aggregations Avg() Sum() Count() Min() Max() Replacing, Locating and Trimming data [Replace()] [Char()] [LTrim()] [RTrim()] Operations Not allowed: INSERT, DELETE, UPDATE Allowed: SELECT Good to Know TOP used without ORDER BY can result in different results, every time it runs TOP with ORDER BY returns the same result set every time it runs Based on MS SQL server 2008 capabilities The server is in Centeral Standard Time (CST) In case your instance is in a different timezone, data conversion functions should be considered ROW_NUMBER() + PARTITION BY + ORDER BY can be used to get the most recent data Subqueries","title":"Data Management (22%)"},{"location":"data-management/#data-management","text":"You will be challenged to: Configure import activity using various file formats within Marketing Cloud Apply SQL to produce the desired results Explain the different ways to extract data from Marketing Cloud Describe SQL best practices for managing data in Marketing Cloud Apply best practices for send logs Describe how data is affected by the Contact delete process .","title":"Data Management"},{"location":"data-management/#data-views","text":"Get to know these system views by heart: _listsubscribers _subscribers Parent Business Unit only To determining the Business Unit level subscriber status is by running a Tracking Extract from the Business Unit and include 'All Subscribers' in your extract. The resulting subscribers.txt file will contain that status relative to that business unit. _sent _open _click _bounce _unsubscribe _complaint _job _journeyactivity _journey","title":"Data Views"},{"location":"data-management/#data-extract","text":"Extract Types Export Create 1 or more zipped files to export data Import Convert XML file into other file to import... comma,tab,pipe","title":"Data Extract"},{"location":"data-management/#import-activity","text":"Types Post File Drop %%FILENAME_FROM_TRIGGER%% Post File Transfer Activity %%FILENAME_FROM_TRIGGER_BASE%% Scheduled Can be used to Add, Add/Update, Update, Overwrite If the file you are importing is encrypted or compressed, you can use a file transfer activity to prepare the file for import. Marketing Cloud Connect users can create an import activity to populate a data extension with object and report data from other clouds via Synchronized Data Sources. You can specify the character encoding your imports use by contacting your Salesforce admin. The encoding you enable applies to all imports in an account. Marketing Cloud assumes that the FTP server in the selected file transfer location reports time in UTC. UTC assumes no time zone offset. If the remote FTP server is not utilizing UTC, adjust limits specified on the Properties page, including System buffer, during activity setup to ensure the activity runs on the intended schedule.","title":"Import Activity"},{"location":"data-management/#file-transfer-activity","text":"Encrypt files with SFMC Public Key Use this activity for a file found on the FTP to: Unzip Files - drops file in the same folder Decrypt Files - Requires Private Key PGP / GPG Decryption Move file from FTP to safehouse Safehouse is not an accesible place It is a data store at the platform level Files will remain on the sFTP for at least 21 days","title":"File Transfer Activity"},{"location":"data-management/#subscription-management","text":"","title":"Subscription Management"},{"location":"data-management/#sendlogs","text":"Gives you access to data not available via standard tracking functions in the Salesforce Marketing Cloud application. You can also specify how long that information will be available depending on your data retention needs You can run query activities on the send logging data extension to return information on the information contained in that data extension.","title":"Sendlogs"},{"location":"data-management/#best-practices","text":"Important to assign a data retention policy, 10 days recommended Keep the number of custom fields low, 10 or fewer When creating a field type Text Do not leave its length blank Avoid assigning a huge length (1000+)","title":"Best Practices"},{"location":"data-management/#synchronized-data-extensions","text":"Criteria on data import","title":"Synchronized Data Extensions"},{"location":"data-management/#contact-delete-feature","text":"Full understanding of delete process Best Practices To improve Contact Delete performance, break your requests into at least 6 smaller requests and submit each request 5 minutes apart. To improve the speed of this process, delete any unnecessary sendable data extensions in your account. You can delete up to one million records. Order of Operation Deletion process initiated > Suppression period > Final deletion Only contacts in these studios can be delieted Email Studio MobileConnect MobilePush Contact Builder Feature needs to be enabled in the parent account level","title":"Contact Delete Feature"},{"location":"data-management/#deletion-process","text":"Process is initiated Enterprise 2.0 Accounts - Deletion should be initiated from the parent account level When the process is initiated, suppressed contacts will Disappear from Journey Builder - It prevents entry by any contact with the same ContactKey Disappear from Contact builder - It prevents creation of any new contact record with the same ContactKey Disappear from Audience Builder - Deleted ContatKeys are excluded from audiences Not receive sends or appear in Email Studio - It prevents addition of any contact with the same ContactKey via imports or triggered sends Not received sends or appear in MobileConnect - During this phase, triggered sends and responses to subscriber' messages aren't delivered Not receive sends or appear in MobilePush Not receive sends or appear in GroupConnect - Follow requests are ignored. Block requests are processed. No auto-responses to incoming messages are triggered Not receive sends or appear in Web Recommendations, Email Recommendataions, and Web and Mobile Analytics. Suppression period 14 days - it can be reduced to 0 (zero) Suppress sends, only - no communications will be sent to that contact The recommended period is set to 0 (zero), however it totally depends on your account design Deletion occurrs Removed a contact from your Marketing Cloud instance, not only a BU Contacts are deleted from lists and sendable data extensions - Non-sendable DE needs to be part of population, to be included in the deletion process In the backend, the KEYS are preserved and the personal information anonymized, so it doesn't affect data reporting Tracking information of a contact will be deleted Aggregate data is still preserved Sends, Imports, automation, query activites... have priority over deletion process The deletion will occur, over the night UTC system time, when no other process is running Deletion process has the lowest priority in the stack Limitations 1 million records per data extension / list Only 1 key can be used to identify the contact to delete Subscriber Key or Contact Key Email is not an option REST API Call The deletion call process key by key from the payload, asynchronously - the process can last serveral hours to complete Perform it from the parent account, not from the BU You can delete contacts in 3 different types of request 1st, by Contact ID - POST /contacts/v1/contacts/actions/delete?type=ids 2nd, by Contact Key - POST /contacts/v1/contacts/actions/delete?type=keys 3rd, by List - POST /contacts/v1/contacts/actions/deletetype=listReference Request payload, sample { \"ContactTypeID\":0, \"values\":[\"ContactKey1\",\"ContactKey2\",\"ContactKey3\"], \"DeleteOperationType\":\"ContactAndAttributes\" }","title":"Deletion Process"},{"location":"data-management/#sql","text":"","title":"SQL"},{"location":"data-management/#best-practices_1","text":"Split long/complex queries in multiple steps To increase performance To avoid timeout Use brackets to mention the name of field or data extensions that have a space in their name Use alias to assign temporary name for tables, to make query easy to read","title":"Best Practices"},{"location":"data-management/#join-statements","text":"Used to retrieve data from 2 or more data extensions INNER JOIN Return the matched values from 2 or more tables In other words, it looks for records that exists in both tables LEFT JOIN RIGHT JOIN OUTER JOIN","title":"JOIN Statements"},{"location":"data-management/#union","text":"Combine the results of two or more queries in one result Requirements Fields' data type must be the same Number of fields must be the same across queries Order of fields must be the same across queries UNION Eleminates dupliates Unifies only unique records UNION ALL Unifies all records, even duplicate records","title":"UNION"},{"location":"data-management/#functions","text":"Conditional Clauses WHERE BETWEEN [HAVING] CASE Converting Data Cast() Convert() Limiting and Ordering results TOP ORDER BY GROUP BY Date-based Functions DATEDIFF DATEADD DATEPART ISDATE() Aggregations Avg() Sum() Count() Min() Max() Replacing, Locating and Trimming data [Replace()] [Char()] [LTrim()] [RTrim()]","title":"Functions"},{"location":"data-management/#operations","text":"Not allowed: INSERT, DELETE, UPDATE Allowed: SELECT","title":"Operations"},{"location":"data-management/#good-to-know","text":"TOP used without ORDER BY can result in different results, every time it runs TOP with ORDER BY returns the same result set every time it runs Based on MS SQL server 2008 capabilities The server is in Centeral Standard Time (CST) In case your instance is in a different timezone, data conversion functions should be considered ROW_NUMBER() + PARTITION BY + ORDER BY can be used to get the most recent data","title":"Good to Know"},{"location":"data-management/#subqueries","text":"","title":"Subqueries"},{"location":"data-modeling/","text":"Data Modeling (8 Questions) You will be challenged to: Configure account Contact model Differentiate the various types and uses of data extensions Describe how Contact Records relate across channels Explain the Contact Delete process Contact Builder Contact Model The data schema is applied per BU Attribute Groups \"Contact Key\" needs to be linked to field of same data type Relationships between Data Extension 1 to 1 1 to Many Many to Many Populations Contact vs Subscriber Contact is a person to send messages to - cross channel Subscriber is a person who oped in to receive communications - channel specific Contact Key vs Contact ID Contact Key Unique identifier you generate and assign to the contact Links the contact with the channels and ... Contact ID Contact ID Numeric unique identifier generated and assigned by SFMC in the backend It is used by the platform to indentify the contact and relates to the platform events such as: email send, email open Contact Key vs Subscriber Key They have the same concept, and the values should be the same All Contacts Where you find all contact records from 'all subscribers list' or Data Extensions set as population Populations It is recommended to have no more than three populations. If you\u2019re using the most up-to-date Journey Builder functionality, you won\u2019t need to use populations most of the time. Instead, it\u2019s best to save populations for specific use cases where you need to create complex queries, such as if your account uses field-level encryption or when you\u2019re using API Entry Sources in Journey Builder. Data Extension Types Shared Synchronized Only after a send, the records on a synchronized DE will be registered in All Conctacts Standard Teamplate-Based Data Extension Send Log Data Extension, Triggered Send Data Extension Data Retention Default behavior Deletes unused data extension after 6 months Retention settings Recommended to define it when creating the data extensions - Especially for send logging Once configured, the settings cannot be removed You can apply data retention policy to an existing DE in Contact Builder, with less than 100 million records. Options To Delete Individual records All records Both, records and data extension To set period After a period of time Reset period on import - every time you add data to the DE, it resets the time On specific date It only cleans data from Data Extensions, it does not delete data from the Contact Framework.","title":"Data Modeling (14%)"},{"location":"data-modeling/#data-modeling-8-questions","text":"You will be challenged to: Configure account Contact model Differentiate the various types and uses of data extensions Describe how Contact Records relate across channels Explain the Contact Delete process","title":"Data Modeling (8 Questions)"},{"location":"data-modeling/#contact-builder","text":"","title":"Contact Builder"},{"location":"data-modeling/#contact-model","text":"The data schema is applied per BU Attribute Groups \"Contact Key\" needs to be linked to field of same data type Relationships between Data Extension 1 to 1 1 to Many Many to Many Populations Contact vs Subscriber Contact is a person to send messages to - cross channel Subscriber is a person who oped in to receive communications - channel specific Contact Key vs Contact ID Contact Key Unique identifier you generate and assign to the contact Links the contact with the channels and ... Contact ID Contact ID Numeric unique identifier generated and assigned by SFMC in the backend It is used by the platform to indentify the contact and relates to the platform events such as: email send, email open Contact Key vs Subscriber Key They have the same concept, and the values should be the same","title":"Contact Model"},{"location":"data-modeling/#all-contacts","text":"Where you find all contact records from 'all subscribers list' or Data Extensions set as population Populations It is recommended to have no more than three populations. If you\u2019re using the most up-to-date Journey Builder functionality, you won\u2019t need to use populations most of the time. Instead, it\u2019s best to save populations for specific use cases where you need to create complex queries, such as if your account uses field-level encryption or when you\u2019re using API Entry Sources in Journey Builder.","title":"All Contacts"},{"location":"data-modeling/#data-extension-types","text":"Shared Synchronized Only after a send, the records on a synchronized DE will be registered in All Conctacts Standard Teamplate-Based Data Extension Send Log Data Extension, Triggered Send Data Extension","title":"Data Extension Types"},{"location":"data-modeling/#data-retention","text":"Default behavior Deletes unused data extension after 6 months Retention settings Recommended to define it when creating the data extensions - Especially for send logging Once configured, the settings cannot be removed You can apply data retention policy to an existing DE in Contact Builder, with less than 100 million records. Options To Delete Individual records All records Both, records and data extension To set period After a period of time Reset period on import - every time you add data to the DE, it resets the time On specific date It only cleans data from Data Extensions, it does not delete data from the Contact Framework.","title":"Data Retention"},{"location":"programmatic-languages/","text":"Programmatic Languages You will be challenged to: Demonstrate knowledge of AMPscript and SSJS language syntax and functions. Implement standard development best practices using Marketing Cloud programming languages Describe how Marketing Cloud handles AMPscript processing. Determine how to programmatically exclude a subscriber at email send time AMPscript Functions IIF() - IF statement inline Output() - Enables variable values to be output at the location where the code block appears. Useful for debugging. Encryption EncryptSymmetric() DecryptSymmetric() Encoding Base64Encode() Data Extension Functions InsertData() LookupRows() - Returns a rowset with limit of 2.5K rows LookupOrderedRows() - Returns specific number of rows and has the ability to sort rows. Lookup() - gives you 1 value/cell from a data extension !!! - The majority of the AMPscript questions will likely be around interacting with Data Extensions, so be very familiar with them !!! - Important to understand the difference between LookupRows() and Lookup() !!! - Important to understand the difference of LookupRows() and LookupOrderedRows() Math Functions Add() Subtract() Multiply() Divide() Mod() String Functions Substring() Length() Uppercase() Lowercase() IndexOf() Concat() ReplaceList() Date/Time Functions !!! - Uses server time Now() - Central Standard Time (CST) without daylight saving time. DateAdd() DateDiff() DateParse() DatePart() FormatDate() SystemDateToLocalDate() Content Functions TreatAsContent() BuildRowSetFromString() MobileConnect Funtions CreateSmsConversation Other Functions BeginImpressionRegion() EndImpressionRegion() !!! - RaiseError() - Stops the execution of send FormatCurrency() Not - Reverses the Boolean expression - E.g. not Empty(theField) AttributeValue() GUID() Empty() Format() Row() RowCount() - E.g. combine with IF statement to show default content Field() Output() HTTP Functions HTTPGet() RedirectTo() HTTPPost() !!! - To basically work with external data SFDC Functions RetrieveSalesforceObjects() - Creates a record in a Salesforce object Site-Based Functions CloudPagesURL() RequestParameter() - used on CloudPages QueryParameter() API Functions InvokeCreate() Data Modification Functions AMPscript Processing Syntax Attributes Use [] square brackets to refer to attributes that contain space in the name (E.g. Data Extension Fields) VAR Used to declare a variable Tells the system that the variable exists Declared variables get the value of NULL !!! - Variable declaration VAR @variable is considered a best practice, even though is not mandatory SET Assign a value to a decalred variable AMPScript is case INsensitive The platform ignore the case (lower,upper) @firstname is the same as @firstNAME or @FIRSTname Delimiters Block: %%[ some code here ]%% Inline: %%=SomeFunctionHere=%% Comparison Is equal: == Is not equal: != Greater than: > Less than: < Greater or equal than: >= Less than or equal than: <= AND: Both conditions must be true OR: Either condition must be true NOT: The opposite value of a boolean expression Conditional Logic Process Loop: FOR ... TO ... DO ... NEXT Evaluate conditions: IF ... ELSEIF ... ELSE ... ENDIF Commenting /* comment */ SSJS Platform Functions Platform Server-side JavaScript functions allow you to use standard JSON and JavaScript functionality to interact with the Marketing Cloud platform. Platform objects can function within email messages, mobile messages, CloudPages, microsites, and landing pages. Because platform objects exist outside of the core library, you can realize faster performance than with other Server-side JavaScript functions. Email SMS Core Functions Core library server-side JavaScript functions allow you to use standard JSON and JavaScript functionality to interact with Marketing Cloud. Core objects can function within landing pages and applications. Landing Pages Applications Things to Know SSJS Methods Add \u2014 Invokes the web service API Create method on an API object Remove \u2014 Invokes the web service API Delete method on an API object Update \u2014 Invokes the web service API Update method on an API object Retrieve \u2014 Invokes the web service API Retrieve method on an API object SSJS Call Parameters Language, ExecutionContextType, ExecutionContentName Language parameter, you can specify either JavaScript or AMPscript. The system defaults to JavaScript. For ExecutionContextType, you can specify either Get or Post. If no parameter is specified, the system defaults to Get. For ExecutionContextName SSJS Supported Personalization String Tags \u2014 References subscriber attribute values, system attribute values, and sendable data extension field values \u2014 References variables created in AMPscript or server-side JavaScript script blocks ctrl:eval \u2014 Embeds JavaScript expressions as content substitutions Parse JSON (Platform) ParseJSON() HTTP Functions (Core) Get() Post() Data Extension Functions (Platform) LookUp() LookUpRows() LookUpOrderedRows() UpdateDE() - Email Only UpsertDE() - Email Only UpdateData() - Non-sendable context UpsertData() - Non-sendable context AMPscript Variable Functions (Platform) GetValue() - var example = Platform.Variable.GetValue(\"@AMPscriptValue\"); SetValue() - Platform.Variable.SetValue(\"@exampleVariable\",\"exampleValue\"); Personalization Strings Is not AMPScript Used to insert account/subscriber specific values from Profile attribute Data Extension column Can be used Inside AMPscript: Does not use %%...%% Outside AMPscript: Used with %%...%% _messagecontext _IsTestSend: Resolves to TRUE if the email job is marked as a Test Send. Exclusion Scripts Where it can be found How it works It excludes subscribers at the send time No AMPScript blocks or Inline AMPScript can be included Variables cannot be set The expression must return TRUE or FALSE The script cannot spread to multiple lines Uses AMPScript expressions If evaluated to TRUE, then suppress the particular sending Sample Use Case API triggered send with no possibility to deduplicate the send For instance, welcome email that is meant to be sent only once For instance, exclude some domain: Domain(emailaddr) != \"yahootest.com\" Best practices Try to avoid it Treat your exclusions during the segmentation How to use AMPScript & SSJS together Set Variable Variable.SetValue(\"myVariable\",\"myValue\"); Get Variable Variable.GetValue(\"@myAmpVariable\"); Error Handling <script runat=\"server\"> Platform.Load('Core','1'); try { </script> %%[ AMPScript Code ]%% <script runat=\"server\"> } catch(e) { Write(Stringify(e)); } </script> Recommendation Where to use what AMPScript Emails and Landing pages SSJS Landing pages and Script activities GTL Emails: Especially to standardize presentation layer (E.g. Transactional Messages) Email Order of Execution Preheader HTML Boday Text Body Subject Line Resources Salesforce Developers : AMPscript Documentation Salesforce Developers : Server-side JavaScript Documentation Salesforce Developers : Guide Template Language Documentation","title":"Programmatic Languages (35%)"},{"location":"programmatic-languages/#programmatic-languages","text":"You will be challenged to: Demonstrate knowledge of AMPscript and SSJS language syntax and functions. Implement standard development best practices using Marketing Cloud programming languages Describe how Marketing Cloud handles AMPscript processing. Determine how to programmatically exclude a subscriber at email send time","title":"Programmatic Languages"},{"location":"programmatic-languages/#ampscript","text":"","title":"AMPscript"},{"location":"programmatic-languages/#functions","text":"IIF() - IF statement inline Output() - Enables variable values to be output at the location where the code block appears. Useful for debugging. Encryption EncryptSymmetric() DecryptSymmetric() Encoding Base64Encode() Data Extension Functions InsertData() LookupRows() - Returns a rowset with limit of 2.5K rows LookupOrderedRows() - Returns specific number of rows and has the ability to sort rows. Lookup() - gives you 1 value/cell from a data extension !!! - The majority of the AMPscript questions will likely be around interacting with Data Extensions, so be very familiar with them !!! - Important to understand the difference between LookupRows() and Lookup() !!! - Important to understand the difference of LookupRows() and LookupOrderedRows() Math Functions Add() Subtract() Multiply() Divide() Mod() String Functions Substring() Length() Uppercase() Lowercase() IndexOf() Concat() ReplaceList() Date/Time Functions !!! - Uses server time Now() - Central Standard Time (CST) without daylight saving time. DateAdd() DateDiff() DateParse() DatePart() FormatDate() SystemDateToLocalDate() Content Functions TreatAsContent() BuildRowSetFromString() MobileConnect Funtions CreateSmsConversation Other Functions BeginImpressionRegion() EndImpressionRegion() !!! - RaiseError() - Stops the execution of send FormatCurrency() Not - Reverses the Boolean expression - E.g. not Empty(theField) AttributeValue() GUID() Empty() Format() Row() RowCount() - E.g. combine with IF statement to show default content Field() Output() HTTP Functions HTTPGet() RedirectTo() HTTPPost() !!! - To basically work with external data SFDC Functions RetrieveSalesforceObjects() - Creates a record in a Salesforce object Site-Based Functions CloudPagesURL() RequestParameter() - used on CloudPages QueryParameter() API Functions InvokeCreate() Data Modification Functions AMPscript Processing","title":"Functions"},{"location":"programmatic-languages/#syntax","text":"Attributes Use [] square brackets to refer to attributes that contain space in the name (E.g. Data Extension Fields) VAR Used to declare a variable Tells the system that the variable exists Declared variables get the value of NULL !!! - Variable declaration VAR @variable is considered a best practice, even though is not mandatory SET Assign a value to a decalred variable AMPScript is case INsensitive The platform ignore the case (lower,upper) @firstname is the same as @firstNAME or @FIRSTname Delimiters Block: %%[ some code here ]%% Inline: %%=SomeFunctionHere=%% Comparison Is equal: == Is not equal: != Greater than: > Less than: < Greater or equal than: >= Less than or equal than: <= AND: Both conditions must be true OR: Either condition must be true NOT: The opposite value of a boolean expression Conditional Logic Process Loop: FOR ... TO ... DO ... NEXT Evaluate conditions: IF ... ELSEIF ... ELSE ... ENDIF Commenting /* comment */","title":"Syntax"},{"location":"programmatic-languages/#ssjs","text":"","title":"SSJS"},{"location":"programmatic-languages/#platform-functions","text":"Platform Server-side JavaScript functions allow you to use standard JSON and JavaScript functionality to interact with the Marketing Cloud platform. Platform objects can function within email messages, mobile messages, CloudPages, microsites, and landing pages. Because platform objects exist outside of the core library, you can realize faster performance than with other Server-side JavaScript functions. Email SMS","title":"Platform Functions"},{"location":"programmatic-languages/#core-functions","text":"Core library server-side JavaScript functions allow you to use standard JSON and JavaScript functionality to interact with Marketing Cloud. Core objects can function within landing pages and applications. Landing Pages Applications","title":"Core Functions"},{"location":"programmatic-languages/#things-to-know","text":"","title":"Things to Know"},{"location":"programmatic-languages/#ssjs-methods","text":"Add \u2014 Invokes the web service API Create method on an API object Remove \u2014 Invokes the web service API Delete method on an API object Update \u2014 Invokes the web service API Update method on an API object Retrieve \u2014 Invokes the web service API Retrieve method on an API object","title":"SSJS Methods"},{"location":"programmatic-languages/#ssjs-call-parameters","text":"Language, ExecutionContextType, ExecutionContentName Language parameter, you can specify either JavaScript or AMPscript. The system defaults to JavaScript. For ExecutionContextType, you can specify either Get or Post. If no parameter is specified, the system defaults to Get. For ExecutionContextName","title":"SSJS Call Parameters"},{"location":"programmatic-languages/#ssjs-supported-personalization-string-tags","text":"\u2014 References subscriber attribute values, system attribute values, and sendable data extension field values \u2014 References variables created in AMPscript or server-side JavaScript script blocks ctrl:eval \u2014 Embeds JavaScript expressions as content substitutions","title":"SSJS Supported Personalization String Tags"},{"location":"programmatic-languages/#parse-json-platform","text":"ParseJSON()","title":"Parse JSON (Platform)"},{"location":"programmatic-languages/#http-functions-core","text":"Get() Post()","title":"HTTP Functions (Core)"},{"location":"programmatic-languages/#data-extension-functions-platform","text":"LookUp() LookUpRows() LookUpOrderedRows() UpdateDE() - Email Only UpsertDE() - Email Only UpdateData() - Non-sendable context UpsertData() - Non-sendable context","title":"Data Extension Functions (Platform)"},{"location":"programmatic-languages/#ampscript-variable-functions-platform","text":"GetValue() - var example = Platform.Variable.GetValue(\"@AMPscriptValue\"); SetValue() - Platform.Variable.SetValue(\"@exampleVariable\",\"exampleValue\");","title":"AMPscript Variable Functions (Platform)"},{"location":"programmatic-languages/#personalization-strings","text":"Is not AMPScript Used to insert account/subscriber specific values from Profile attribute Data Extension column Can be used Inside AMPscript: Does not use %%...%% Outside AMPscript: Used with %%...%% _messagecontext _IsTestSend: Resolves to TRUE if the email job is marked as a Test Send.","title":"Personalization Strings"},{"location":"programmatic-languages/#exclusion-scripts","text":"","title":"Exclusion Scripts"},{"location":"programmatic-languages/#where-it-can-be-found","text":"","title":"Where it can be found"},{"location":"programmatic-languages/#how-it-works","text":"It excludes subscribers at the send time No AMPScript blocks or Inline AMPScript can be included Variables cannot be set The expression must return TRUE or FALSE The script cannot spread to multiple lines","title":"How it works"},{"location":"programmatic-languages/#uses-ampscript-expressions","text":"If evaluated to TRUE, then suppress the particular sending","title":"Uses AMPScript expressions"},{"location":"programmatic-languages/#sample-use-case","text":"API triggered send with no possibility to deduplicate the send For instance, welcome email that is meant to be sent only once For instance, exclude some domain: Domain(emailaddr) != \"yahootest.com\"","title":"Sample Use Case"},{"location":"programmatic-languages/#best-practices","text":"Try to avoid it Treat your exclusions during the segmentation","title":"Best practices"},{"location":"programmatic-languages/#how-to-use-ampscript-ssjs-together","text":"Set Variable Variable.SetValue(\"myVariable\",\"myValue\"); Get Variable Variable.GetValue(\"@myAmpVariable\");","title":"How to use AMPScript &amp; SSJS together"},{"location":"programmatic-languages/#error-handling","text":"<script runat=\"server\"> Platform.Load('Core','1'); try { </script> %%[ AMPScript Code ]%% <script runat=\"server\"> } catch(e) { Write(Stringify(e)); } </script>","title":"Error Handling"},{"location":"programmatic-languages/#recommendation-where-to-use-what","text":"AMPScript Emails and Landing pages SSJS Landing pages and Script activities GTL Emails: Especially to standardize presentation layer (E.g. Transactional Messages)","title":"Recommendation Where to use what"},{"location":"programmatic-languages/#email-order-of-execution","text":"Preheader HTML Boday Text Body Subject Line","title":"Email Order of Execution"},{"location":"programmatic-languages/#resources","text":"Salesforce Developers : AMPscript Documentation Salesforce Developers : Server-side JavaScript Documentation Salesforce Developers : Guide Template Language Documentation","title":"Resources"},{"location":"security/","text":"Security You will be challenged to: Identify different options to secure data in Marketing Cloud Describe security best practices in Marketing Cloud Key Management What is it Provides a method you can use to manage AES encryption and decryption options for your email messages and landing pages. Use this feature to manage certificates and other security options regarding the encryption, decryption, and digital signing of email messages. Asymmectric Encryption Asymmetric encryption requires a pre-created certificate uploaded from your computer to your Salesforce Marketing Cloud account, which can be used for encrypted imports. Symmetric Encryption Symmetric encryption requires you to create a passphrase for use with the key. Initialization Vector Encryption Initialization vector encryption requires you to enter the block of bits to be used as the initialization vector. You can specify the 16-byte IV yourself. Salt Encryption Salt encryption requires a hex value longer than 8 bits for use as a salt value. The encryption uses random bits generated along with a password or passphrase. The salt value does not include a maximum length value. Use Salt keys to generate JWTs for custom Journey Builder activities. SAML (Security Assertion Markup Language) Allows you to provide either the required metadata or the URL from which to retrieve that metadata to use this feature. SAML allows you to exchange authentication information with an external authentication service to enable single sign-on functionality for users. This feature allows users to authenticate once for access to multiple systems. SSL Certificate SSL certificates keep online interactions private even though they travel across the public Internet, and they help customers gain the confidence to transact with your website. 1 SSL will be used to secure 1 domain. 4 SSLs will be needed to secure clicks, views, images, and CloudPage domains Encryption Marketing Cloud Connector Synchronized Data Sources Data Encrypted in Sales and Service Cloud MC re-encrypts data using field-level encryption symmetric key upon import Reports and campaign sends Support platform encryption Both are encrypted in MC with field level encryption Automation Journey Builder Events Does not support platform encryption through events To maintain encryption: use field-level encryption with sychronized data extensions, instead of data imports Automation Studio Imports Does not support platform encryption Data imported is not encrypted, even data from Sales and Service Cloud To maintain encryption Synchronize encrypted Salesforce opbjects with Synchronized Data Sources Decrypt file on import Encode functions Email and Cloudpages Levels of Encryption Transparent Data Encryption (Encryption At Rest) Encryption at rest at the database level No impact on application usage Minimal performance overhead Keys stored in FIPS Level 3 complient HSMs No application layer encryption Protects when physical access to media is compromised Field Level Encryption (Encrypted Data Sending) Encryption at rest at the field level (encrypted fields are visible but encrypted) Requires key value and initialization vector when using encryption keys Applies at the account level for new accounts Implies limits on use of data within application to send-time only (decrypts at send) Protects sensitive data within application Can only be implemented on new instances Cannot segment, filter, or query encrypted fields Must use data extensions Cannot report on encrytped fields Cannot use auto-suppression lists Must use subscriber keys for each contact/subscribers (should not encrypt sub keys) Cannot encrypt data extensions through Email Studio (must use Contact Builder) Only email and text data types can be encrypted Only email channel is supported Performance impact during encryption/decryption process (mostly for larger volumes) Keys stored in dedicated application database key store Key Management Keys must be setup prior to encrypting data Keys should ideally be rotated on a periodic basis Following Key types supported Salt Symmetric Asymmetric Encryption Schemas supported (in sFTP) PGP GPG Tokenized Sending Off platform data storage (send data is not stored in SFMC) API access at send time using token Implies limits on use of data within application to send-time only (retrieves at send) Safe to use with PII and PHI (personal health information) Security Best Practices Principle of Least Privilege Every user, process or program must be able to access only the information and resources that are required for a legitimate purpose. Only bring in the data we need to achieve the outcomes. Segmentation Personalization Data Modeling Session Settings: 20-minute Session Timeout (longer sessions for active users might be more practical) Enable require Secure Connections (https) checkbox Username and Logins: Login Expires After Inactivity of 90 days or fewer Value of 3 Invalid Logins Before Lockout Usernames require at least 8 characters Password Policies: Set Minimum Password Length to at least 8 characters Enforce Password History value to 8 User Password Expires in 90 days Do not select Exclude FTP Users from Password Expiration Always enable Send Password Change Confirmation Email Roles and Permissions \"Deny\" permission in any role or individual user prevents access to that feature, no matter what other roles are specific to that feature. Data Export Settings: Enforce Export Email Whitelist API Integration Security File Transfer Security","title":"Security (7%)"},{"location":"security/#security","text":"You will be challenged to: Identify different options to secure data in Marketing Cloud Describe security best practices in Marketing Cloud","title":"Security"},{"location":"security/#key-management","text":"What is it Provides a method you can use to manage AES encryption and decryption options for your email messages and landing pages. Use this feature to manage certificates and other security options regarding the encryption, decryption, and digital signing of email messages. Asymmectric Encryption Asymmetric encryption requires a pre-created certificate uploaded from your computer to your Salesforce Marketing Cloud account, which can be used for encrypted imports. Symmetric Encryption Symmetric encryption requires you to create a passphrase for use with the key. Initialization Vector Encryption Initialization vector encryption requires you to enter the block of bits to be used as the initialization vector. You can specify the 16-byte IV yourself. Salt Encryption Salt encryption requires a hex value longer than 8 bits for use as a salt value. The encryption uses random bits generated along with a password or passphrase. The salt value does not include a maximum length value. Use Salt keys to generate JWTs for custom Journey Builder activities. SAML (Security Assertion Markup Language) Allows you to provide either the required metadata or the URL from which to retrieve that metadata to use this feature. SAML allows you to exchange authentication information with an external authentication service to enable single sign-on functionality for users. This feature allows users to authenticate once for access to multiple systems.","title":"Key Management"},{"location":"security/#ssl-certificate","text":"SSL certificates keep online interactions private even though they travel across the public Internet, and they help customers gain the confidence to transact with your website. 1 SSL will be used to secure 1 domain. 4 SSLs will be needed to secure clicks, views, images, and CloudPage domains","title":"SSL Certificate"},{"location":"security/#encryption","text":"","title":"Encryption"},{"location":"security/#marketing-cloud-connector","text":"Synchronized Data Sources Data Encrypted in Sales and Service Cloud MC re-encrypts data using field-level encryption symmetric key upon import Reports and campaign sends Support platform encryption Both are encrypted in MC with field level encryption","title":"Marketing Cloud Connector"},{"location":"security/#automation","text":"Journey Builder Events Does not support platform encryption through events To maintain encryption: use field-level encryption with sychronized data extensions, instead of data imports Automation Studio Imports Does not support platform encryption Data imported is not encrypted, even data from Sales and Service Cloud To maintain encryption Synchronize encrypted Salesforce opbjects with Synchronized Data Sources","title":"Automation"},{"location":"security/#decrypt-file-on-import","text":"","title":"Decrypt file on import"},{"location":"security/#encode-functions-email-and-cloudpages","text":"","title":"Encode functions Email and Cloudpages"},{"location":"security/#levels-of-encryption","text":"","title":"Levels of Encryption"},{"location":"security/#transparent-data-encryption-encryption-at-rest","text":"Encryption at rest at the database level No impact on application usage Minimal performance overhead Keys stored in FIPS Level 3 complient HSMs No application layer encryption Protects when physical access to media is compromised","title":"Transparent Data Encryption (Encryption At Rest)"},{"location":"security/#field-level-encryption-encrypted-data-sending","text":"Encryption at rest at the field level (encrypted fields are visible but encrypted) Requires key value and initialization vector when using encryption keys Applies at the account level for new accounts Implies limits on use of data within application to send-time only (decrypts at send) Protects sensitive data within application Can only be implemented on new instances Cannot segment, filter, or query encrypted fields Must use data extensions Cannot report on encrytped fields Cannot use auto-suppression lists Must use subscriber keys for each contact/subscribers (should not encrypt sub keys) Cannot encrypt data extensions through Email Studio (must use Contact Builder) Only email and text data types can be encrypted Only email channel is supported Performance impact during encryption/decryption process (mostly for larger volumes) Keys stored in dedicated application database key store Key Management Keys must be setup prior to encrypting data Keys should ideally be rotated on a periodic basis Following Key types supported Salt Symmetric Asymmetric Encryption Schemas supported (in sFTP) PGP GPG","title":"Field Level Encryption (Encrypted Data Sending)"},{"location":"security/#tokenized-sending","text":"Off platform data storage (send data is not stored in SFMC) API access at send time using token Implies limits on use of data within application to send-time only (retrieves at send) Safe to use with PII and PHI (personal health information)","title":"Tokenized Sending"},{"location":"security/#security-best-practices","text":"Principle of Least Privilege Every user, process or program must be able to access only the information and resources that are required for a legitimate purpose. Only bring in the data we need to achieve the outcomes. Segmentation Personalization Data Modeling Session Settings: 20-minute Session Timeout (longer sessions for active users might be more practical) Enable require Secure Connections (https) checkbox Username and Logins: Login Expires After Inactivity of 90 days or fewer Value of 3 Invalid Logins Before Lockout Usernames require at least 8 characters Password Policies: Set Minimum Password Length to at least 8 characters Enforce Password History value to 8 User Password Expires in 90 days Do not select Exclude FTP Users from Password Expiration Always enable Send Password Change Confirmation Email Roles and Permissions \"Deny\" permission in any role or individual user prevents access to that feature, no matter what other roles are specific to that feature. Data Export Settings: Enforce Export Email Whitelist API Integration Security File Transfer Security","title":"Security Best Practices"}]}